networks:
  mongo-cluster:
    driver: bridge

services:
  mongo1:
    image: mongo:latest
    container_name: mongo-replica-primary
    ports:
      - 27017:27017
    volumes:
     - ./mongo-data/mongo-replica-1:/data/db
     - ./mongo-keyfile:/etc/mongo-keyfile:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: username
      MONGO_INITDB_ROOT_PASSWORD: password123
    command: ["mongod", "--replSet", "mongo-cluster", "--auth", "--keyFile", "/etc/mongo-keyfile"]
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'mongo-cluster',members:[{_id:0,host:\"mongo-replica-primary:27017\"},{_id:1,host:\"mongo-replica-secondary-2:27017\"},{_id:2,host:\"mongo-replica-secondary-3:27017\"}]}).ok || rs.status().ok" | mongosh --port 27017 --quiet) -eq 1
    networks:
      - mongo-cluster

  mongo2:
    image: mongo:latest
    container_name: mongo-replica-secondary-2
    ports:
      - 27018:27017
    volumes:
      - ./mongo-data/mongo-replica-2:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: username
      MONGO_INITDB_ROOT_PASSWORD: password123
    command: ["mongod", "--replSet", "mongo-cluster", "--auth", "--keyFile", "/etc/mongo-keyfile"]
    networks:
      - mongo-cluster

  mongo3:
    image: mongo:latest
    container_name: mongo-replica-secondary-3
    ports:
      - 27019:27017
    volumes:
      - ./mongo-data/mongo-replica-3:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: username
      MONGO_INITDB_ROOT_PASSWORD: password123
    command: ["mongod", "--replSet", "mongo-cluster", "--auth", "--keyFile", "/etc/mongo-keyfile"]
    networks:
      - mongo-cluster

